[gd_scene load_steps=16 format=3 uid="uid://pbnbjg78u6yt"]

[ext_resource type="Script" uid="uid://d08mngo1shghu" path="res://操作回合UI/操作回合.gd" id="1_lrsob"]
[ext_resource type="PackedScene" uid="uid://t0wcpxr5c1oa" path="res://操作回合UI/战场拖拽.tscn" id="1_nhqbo"]
[ext_resource type="PackedScene" uid="uid://eaqrtc453uqk" path="res://操作回合UI/酒馆拖拽.tscn" id="2_xthle"]
[ext_resource type="PackedScene" uid="uid://bjbmwdhqu7a27" path="res://操作回合UI/手牌拖拽.tscn" id="3_lrsob"]
[ext_resource type="Script" uid="uid://bao38r334dwrj" path="res://操作回合UI/箭头遮罩.gd" id="6_lpnrc"]
[ext_resource type="PackedScene" uid="uid://x5t2wwss6u0g" path="res://操作回合UI/箭头.tscn" id="6_v2jep"]
[ext_resource type="Script" uid="uid://cc4oerpy80n8d" path="res://操作回合UI/抉择遮罩.gd" id="10_j0wil"]
[ext_resource type="PackedScene" uid="uid://bt3iq3wqhc88f" path="res://操作回合UI/抉择选项UI.tscn" id="12_fsu7u"]

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_lrsob"]
resource_local_to_scene = true
content_margin_left = 10.0
content_margin_top = 10.0
content_margin_right = 10.0
content_margin_bottom = 10.0
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15

[sub_resource type="GDScript" id="GDScript_v2jep"]
resource_name = "酒馆"
script/source = "extends DragObjContainer

func 添加到本容器中(d:DragObj,index:int=-1):
	if d is LuShiCard:
		d.卡片所在位置=Enums.CardPosition.酒馆
	super.添加到本容器中(d,index)
	
func 添加到其他容器(拖拽中的对象:DragObj,拖拽的目标容器:DragObjContainer):
	super.添加到其他容器(拖拽中的对象,拖拽的目标容器)
	print(\"金币扣除\")
	print(\"购买成功\")
	pass


func 节点开始拖拽(d:DragObj):
	super.节点开始拖拽(d)
	# 高亮目标
	var p=拖拽的目标容器.get_parent()
	if p is PanelContainer:
		var style=p.get_theme_stylebox(\"panel\") as StyleBoxFlat
		style.border_color=Color(0.975, 0.773, 0.0)
		p.add_theme_stylebox_override(\"panel\",style)
	pass

func 节点结束拖拽(d:DragObj):
	super.节点结束拖拽(d)
	# 高亮目标
	var p=拖拽的目标容器.get_parent()
	if p is PanelContainer:
		var style=p.get_theme_stylebox(\"panel\") as StyleBoxFlat
		style.border_color=Color(0.8, 0.8, 0.8)
		p.add_theme_stylebox_override(\"panel\",style)
	pass
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_v2jep"]
resource_local_to_scene = true
content_margin_left = 10.0
content_margin_top = 10.0
content_margin_right = 10.0
content_margin_bottom = 10.0
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_lpnrc"]
resource_local_to_scene = true
content_margin_left = 10.0
content_margin_top = 10.0
content_margin_right = 10.0
content_margin_bottom = 10.0
border_width_left = 5
border_width_top = 5
border_width_right = 5
border_width_bottom = 5
corner_radius_top_left = 15
corner_radius_top_right = 15
corner_radius_bottom_right = 15
corner_radius_bottom_left = 15

[sub_resource type="GDScript" id="GDScript_lrsob"]
resource_name = "手牌拖拽"
script/source = "extends DragObjContainer

@export var player:Player

func 添加到本容器中(d:DragObj,index:int=-1):
	if d is LuShiCard:
		d.卡片所在位置=Enums.CardPosition.手牌
	super.添加到本容器中(d,index)
	
func _process(delta: float) -> void:
	super._process(delta)

func 添加到其他容器(拖拽中的对象:DragObj,拖拽的目标容器:DragObjContainer):
	super.添加到其他容器(拖拽中的对象,拖拽的目标容器)
	await get_tree().process_frame
	print(\"使用手牌\")
	if 拖拽中的对象 is LuShiCard:
		if 拖拽中的对象.卡牌类型==Enums.CardType.随从:
			var 随从取消使用=func(d:DragObj):
				print(\"随从取消使用\")
				self.添加到本容器中(d,_拖拽中的对象原有索引)
				pass
			var list=player.获取酒馆And战场的牌()
			if 拖拽中的对象.选择目标对象:
				var 目标list=拖拽中的对象.选择目标对象.获取选择的目标对象(list)
				if 目标list.is_empty():
					print(\"直接使用随从\")
					_使用成功(拖拽中的对象)
				else:
					# 展示选择箭头组件
					player.箭头遮罩.初始化(拖拽中的对象,目标list,_使用成功.bind(拖拽中的对象),随从取消使用.bind(拖拽中的对象))
			elif 拖拽中的对象.抉择:
				print(\"抉择随从\")
				player.抉择遮罩.初始化(拖拽中的对象,_使用成功.bind(拖拽中的对象),随从取消使用.bind(拖拽中的对象))
				pass
			else:
				print(\"随从使用\")
				_使用成功(拖拽中的对象)
			pass
		elif [Enums.CardType.酒馆法术,Enums.CardType.法术,Enums.CardType.塑造法术].has(拖拽中的对象.卡牌类型):
			var 法术取消使用=func(d:DragObj):
				print(\"法术取消使用\")
				self.添加到本容器中(d,_拖拽中的对象原有索引)
				pass
			var list=player.获取酒馆And战场的牌()
			if 拖拽中的对象.选择目标对象:
				var 目标list=拖拽中的对象.选择目标对象.获取选择的目标对象(list)
				if 目标list.is_empty():
					print(\"法术使用失败，没有目标对象\")
					法术取消使用.call(拖拽中的对象)
				else:
					# 展示选择箭头组件
					player.箭头遮罩.初始化(拖拽中的对象,目标list,_使用成功.bind(拖拽中的对象),法术取消使用.bind(拖拽中的对象))
			elif 拖拽中的对象.抉择:
				print(\"抉择法术\")
				player.抉择遮罩.初始化(拖拽中的对象,_使用成功.bind(拖拽中的对象),法术取消使用.bind(拖拽中的对象))
				pass
			else:
				print(\"法术使用\")
				_使用成功(拖拽中的对象)
		else:
			printerr(\"展示不支持这个类型的使用。\",拖拽中的对象)
			print_stack()
	else:
		printerr(\"不支持非炉石卡牌:\",拖拽中的对象)
		printerr(\"目标容器：\",拖拽的目标容器)

func _使用成功(d:DragObj):
	print(\"_使用成功\",d)
	player.使用卡牌信号.emit(d)
	pass

func 节点开始拖拽(d:DragObj):
	super.节点开始拖拽(d)
	# 高亮目标
	var p=拖拽的目标容器.get_parent()
	if p is PanelContainer:
		var style=p.get_theme_stylebox(\"panel\") as StyleBoxFlat
		style.border_color=Color(0.975, 0.773, 0.0)
		p.add_theme_stylebox_override(\"panel\",style)
	pass

func 节点结束拖拽(d:DragObj):
	super.节点结束拖拽(d)
	# 高亮目标
	var p=拖拽的目标容器.get_parent()
	if p is PanelContainer:
		var style=p.get_theme_stylebox(\"panel\") as StyleBoxFlat
		style.border_color=Color(0.8, 0.8, 0.8)
		p.add_theme_stylebox_override(\"panel\",style)
	pass
"

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_d5n4s"]
bg_color = Color(0.6, 0.6, 0.6, 0.431373)

[sub_resource type="StyleBoxFlat" id="StyleBoxFlat_fsu7u"]
resource_local_to_scene = true
border_width_left = 2
border_width_top = 2
border_width_right = 2
border_width_bottom = 2
corner_radius_top_left = 5
corner_radius_top_right = 5
corner_radius_bottom_right = 5
corner_radius_bottom_left = 5

[node name="操作回合" type="Control"]
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = ExtResource("1_lrsob")

[node name="PanelContainer" type="PanelContainer" parent="."]
layout_mode = 1
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer"]
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/HBoxContainer"]
layout_mode = 2
size_flags_horizontal = 3
theme_override_constants/separation = 10

[node name="酒馆" type="PanelContainer" parent="PanelContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_lrsob")

[node name="酒馆拖拽" parent="PanelContainer/HBoxContainer/VBoxContainer/酒馆" node_paths=PackedStringArray("拖拽的目标容器") instance=ExtResource("2_xthle")]
layout_mode = 2
script = SubResource("GDScript_v2jep")
"拖拽的目标容器" = NodePath("../../手牌/手牌拖拽")

[node name="战场" type="PanelContainer" parent="PanelContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_v2jep")

[node name="战场拖拽" parent="PanelContainer/HBoxContainer/VBoxContainer/战场" node_paths=PackedStringArray("拖拽的目标容器") instance=ExtResource("1_nhqbo")]
layout_mode = 2
"拖拽的目标容器" = NodePath("../../酒馆/酒馆拖拽")

[node name="手牌" type="PanelContainer" parent="PanelContainer/HBoxContainer/VBoxContainer"]
layout_mode = 2
size_flags_vertical = 3
theme_override_styles/panel = SubResource("StyleBoxFlat_lpnrc")

[node name="手牌拖拽" parent="PanelContainer/HBoxContainer/VBoxContainer/手牌" node_paths=PackedStringArray("player", "拖拽的目标容器") instance=ExtResource("3_lrsob")]
layout_mode = 2
script = SubResource("GDScript_lrsob")
player = NodePath("../../../../..")
"拖拽的目标容器" = NodePath("../../战场/战场拖拽")

[node name="Tips" type="PanelContainer" parent="PanelContainer/HBoxContainer"]
custom_minimum_size = Vector2(144, 0)
layout_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/HBoxContainer/Tips"]
layout_mode = 2

[node name="结束回合" type="Button" parent="PanelContainer/HBoxContainer/Tips/VBoxContainer"]
layout_mode = 2
text = "结束回合"

[node name="加载存档" type="Button" parent="PanelContainer/HBoxContainer/Tips/VBoxContainer"]
layout_mode = 2
text = "加载存档"

[node name="箭头遮罩" type="Panel" parent="PanelContainer"]
visible = false
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_d5n4s")
script = ExtResource("6_lpnrc")

[node name="箭头" parent="PanelContainer/箭头遮罩" instance=ExtResource("6_v2jep")]
z_index = 100
position = Vector2(10, 448)

[node name="抉择遮罩" type="Panel" parent="PanelContainer"]
visible = false
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_d5n4s")
script = ExtResource("10_j0wil")

[node name="PanelContainer" type="PanelContainer" parent="PanelContainer/抉择遮罩"]
layout_mode = 1
anchors_preset = 8
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -20.0
offset_top = -20.0
offset_right = 20.0
offset_bottom = 20.0
grow_horizontal = 2
grow_vertical = 2

[node name="VBoxContainer" type="VBoxContainer" parent="PanelContainer/抉择遮罩/PanelContainer"]
layout_mode = 2

[node name="HBoxContainer" type="HBoxContainer" parent="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer"]
layout_mode = 2

[node name="选项1" parent="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer/HBoxContainer" instance=ExtResource("12_fsu7u")]
layout_mode = 2
theme_override_styles/panel = SubResource("StyleBoxFlat_fsu7u")

[node name="操作" type="HBoxContainer" parent="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer"]
layout_mode = 2

[node name="取消" type="Button" parent="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer/操作"]
layout_mode = 2
size_flags_horizontal = 3
text = "取消"

[node name="确定" type="Button" parent="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer/操作"]
layout_mode = 2
size_flags_horizontal = 3
disabled = true
text = "确定"

[connection signal="pressed" from="PanelContainer/HBoxContainer/Tips/VBoxContainer/结束回合" to="." method="_on_结束回合_pressed"]
[connection signal="pressed" from="PanelContainer/HBoxContainer/Tips/VBoxContainer/加载存档" to="." method="_on_加载存档_pressed"]
[connection signal="gui_input" from="PanelContainer/箭头遮罩" to="PanelContainer/箭头遮罩" method="_on_gui_input"]
[connection signal="gui_input" from="PanelContainer/抉择遮罩" to="PanelContainer/抉择遮罩" method="_on_gui_input"]
[connection signal="pressed" from="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer/操作/取消" to="PanelContainer/抉择遮罩" method="_on_取消_pressed"]
[connection signal="pressed" from="PanelContainer/抉择遮罩/PanelContainer/VBoxContainer/操作/确定" to="PanelContainer/抉择遮罩" method="_on_确定_pressed"]
